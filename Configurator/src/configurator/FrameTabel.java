/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package configurator;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author cherepanov
 */
public class FrameTabel extends javax.swing.JPanel {

    /**
     * Creates new form FrameTabel
     */
    public FrameTabel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(0, 327, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButton1)
                .addContainerGap(258, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
    }//GEN-LAST:event_jButton1ActionPerformed
    TableModel getTableData(){ // функция для создания списка из талиц базы так же возращаем объект для конструкции таблицы при запуске
    // Можно так сложно не соединять, аппендицит от предыдущего что бы не запутаться
    String[] columnDop = {"Выбор"};// до поля для галок или еще чего
    String[] columnNames = StructSelectData.getColumns();
    String[] resultColumn = Stream.concat( Arrays.stream(columnDop), Arrays.stream(columnNames))
            .toArray(String[]::new); // соединяем два массива
    Object[][] data = StructSelectData.getcurrentSelectTable(); // От куда беру данные
    Object[] streamArray ;
    Object[] streamNull = new Object[1];
    streamNull[0] = null;
    Object[][] tmp2 = new Object[data.length][];
    for(int i=0; i< data.length; i++){
        streamArray = new Object[data[i].length+1];
        // преобразовываем массив
        Object[] testStream = Stream.concat( Arrays.stream(streamNull), Arrays.stream(data[i])).toArray(Object[]::new); 
        tmp2[i] = testStream;
    }
    return new DefaultTableModel(tmp2, resultColumn){  
    @Override           
    public Class<?> getColumnClass(int columnIndex) { // структура для отображения таблицы с галками
      Class clazz = String.class;
      switch (columnIndex) {
        case 0:
          clazz = Boolean.class;
          break;
      }
      return clazz; 
    }       
    @Override
    public boolean isCellEditable(int row, int column) {
      return column == column;
    } 
     @Override
    public void setValueAt(Object aValue, int row, int column) {
      // Условие проверки галочки скрывать легенду
      if (aValue instanceof Boolean && column == 0) {
        System.out.println("Posution - > " + row + " " + aValue);        
        Vector rowData = (Vector)getDataVector().get(row); // не помню для чего но без этого только скрывает =(
        rowData.set(0, (boolean)aValue);
        fireTableCellUpdated(row, column);
        
        try {
            // Само действие не реализованно
        if((boolean) aValue == true){
          System.out.println("true");
        }
        if((boolean) aValue == false){
          System.out.println("false");
        }
        }catch (NullPointerException e) {
        JOptionPane.showMessageDialog(null, "Трудности с добавлением");
        }
      }

    }
    };
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
