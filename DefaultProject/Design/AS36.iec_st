<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE Program >
<Program UUID="4C34DBE74E9D2AB11B6044AD497C6AD3" Name="AS36" Period="250">
    <Variables>
        <Variable UUID="542BE8CF47A7EB78375363BC854C9884" Name="i" Type="INT" TypeUUID="47B58C4E4726C8B230965EBE77F1169E" Usage="internal" />
        <Variable UUID="7E1E880A4C0A94A463C673AFDA6A36DE" Name="Eout_valid" Type="BOOL" TypeUUID="EC797BDD4541F500AD80A78F1F991834" Usage="internal" />
        <Variable UUID="9BDFF6F94F55515F908F3B8F57554ECD" Name="EoutEin_valid" Type="BOOL" TypeUUID="EC797BDD4541F500AD80A78F1F991834" Usage="internal" />
        <Variable UUID="1C75AA3A48EEF1BFCC8A66A9F0985380" Name="AS_conf" Type="AS_conf_sel1" TypeUUID="6E2FF8DE43E4DEA64D39F5BB8DF2B1C1" Usage="internal" />
        <Variable UUID="25FCBBFA496FA16585301C976D3AEA02" Name="sig_sel_21019" Type="c_aSigSel_1_exe" TypeUUID="CA26F9964BAD98A9821011904E2FAAFB" Usage="internal" />
        <Variable UUID="F79D7C57482DC8C2D7E8B9B68E989C43" Name="as_test_reg" Type="INT" TypeUUID="47B58C4E4726C8B230965EBE77F1169E" Size="20" Array="TRUE" Usage="internal" />
        <Variable UUID="5C7EE35843355EA0CFBD528801E6255D" Name="AS_manual_ramp" Type="ramp_1" TypeUUID="99210B724B0EF3BE91BD8B8D7747356C" Usage="internal" />
    </Variables>
    <ST><![CDATA[






// Значение запаса по помпажу выбирается как минимальное от всех агрегатов
AS36_str.Shop_YR3 := 100.0;
AS36_str.Shop_Yr3_valid := false;
 
for i := 1 to 5 do
	if ((gpa[i].S > 0.0 and gpa[i].run = true)and (AS36_str.Shop_YR3 = 0.0 or AS36_str.Shop_YR3 > gpa[i].S) ) then
		AS36_str.Shop_YR3 := gpa[i].S;
//		AS36_str.Shop_Yr3_valid := TRUE;
	end_if;
end_for;
Eout_valid := (shop.Eout > 0.0);
EoutEin_valid := (shop.EoutEin > 0.0);
// конфигурация пид-контуров и селектор выхода
AS_conf(
	on_1 :=  AS36_str.Shop_Yr3_valid,
	on_2 := Eout_valid,
	on_3 := EoutEin_valid 
	);
	
// расчет пид-контуров	
sig_sel_21019(as_MStruct, as_test_reg);	


//        логика ручного или автоматического регулирования
                                         
AS_manual_ramp(enable1 := TRUE, ramp_rate := AS36_str.SP_manual_rate, y_target := AS36_str.CV_Manual,  y_current := AS36_str.AS_CV_out);
		AS36_str.AS_CV_out := AS_manual_ramp.ramp;
TEST.var := as_MStruct.CV;  //TEST
TEST.var_1 := as_MStruct.PplusD_selected;             //TEST

if (AS36_str.AS_CV_out < as_MStruct.CV) then  // если расчетное открытие больше чем ручное, берем расчетное
	AS36_str.AS_CV_out := as_MStruct.CV;
	SAR_KC_GPA1.OGR := true;// сюда можно добавить ПС, что мы сидим на ограничении
	SAR_KC_GPA1.OGR_P := shop.Eout > AS36_str.SP_Pout;
	SAR_KC_GPA1.OGR_E := shop.EoutEin > AS36_str.SP_PoutPin;
	SAR_KC_GPA1.OGR_S := AS36_str.Shop_YR3 < AS36_str.SP_S;
else SAR_KC_GPA1.OGR := false;// сюда можно добавить ПС, что мы сидим на ограничении
	 SAR_KC_GPA1.OGR_P := false;
	 SAR_KC_GPA1.OGR_E := false;
	 SAR_KC_GPA1.OGR_S := false;
end_if;

IF Alg_KC_us.Stop THEN AS36_str.AS_CV_out := 100.0; END_IF;

AS36_str_out.SP_Pout := AS36_str.SP_Pout;       // Добавлено АМС
AS36_str_out.SP_PoutPin := AS36_str.SP_PoutPin;   //Добавлено АМС
AS36_str_out.SP_S := AS36_str.SP_S;    // Добавлено АМС

//                                      
if (AS36_str.BTN_Unload) then
	AS36_str.CV_Manual := 100.0;
	AS36_str.BTN_Unload := FALSE;
	AS36_str.BTN_Load := FALSE;
elsif( AS36_str.BTN_Load) then
	AS36_str.CV_Manual := 0.0;
	AS36_str.BTN_Unload := FALSE;
	AS36_str.BTN_Load := FALSE;
end_if;

// отработка дискретных датчиков ограничений
if (AS36_str.Discr_PS) then   // эту переменную надо самостоятельно сформировать по всем ограничеиям дискретным, когда требуется открыть 36 кран
	AS36_str.CV_Manual := 100.0;
end_if;


AS36_str.BTN_Unload := false;
AS36_str.BTN_Load := FALSE;
AS36_str.Discr_PS := false;]]></ST>
    <DataTypes />
    <FBLibrary>
        <FunctionBlock UUID="6E2FF8DE43E4DEA64D39F5BB8DF2B1C1" Name="AS_conf_sel1">
            <Variables>
                <Variable UUID="96BA4C93464281E151483DB98D54D9BB" Name="d_pd" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="internal" />
                <Variable UUID="ED06E2CB41FB85D38FAA5CBE79F9B9BF" Name="PD_prev" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="internal" />
                <Variable UUID="2ED1BB6941E8C80256AC868491C22539" Name="on_1" Type="BOOL" TypeUUID="EC797BDD4541F500AD80A78F1F991834" Usage="input" />
                <Variable UUID="2A14FD334D21DE6D5BF99B96ABE06854" Name="on_2" Type="BOOL" TypeUUID="EC797BDD4541F500AD80A78F1F991834" Usage="input" />
                <Variable UUID="0A6A9BD24F4D9D9609B959954E63F3EF" Name="on_3" Type="BOOL" TypeUUID="EC797BDD4541F500AD80A78F1F991834" Usage="input" />
                <Variable UUID="566ADAFB4E41A18457E675BD9CD8CDA0" Name="loop_selected" Type="INT" TypeUUID="47B58C4E4726C8B230965EBE77F1169E" Usage="internal" />
            </Variables>
            <ST><![CDATA[

if (not AS_init) then
	AS_init := TRUE;
	as_MStruct.pid_struct[1].loop_type := 0;
	as_MStruct.pid_struct[1].loop_num := 1;
	as_MStruct.pid_struct[1].loop_enable := true;
//	as_MStruct.pid_struct[1].loop_valid := on_1;
	as_MStruct.pid_struct[1].auto_man := true;
	as_MStruct.pid_struct[1].loop_direct := true;
	as_MStruct.pid_struct[1].KP := 2.0;
	as_MStruct.pid_struct[1].KI := 0.05;
	as_MStruct.pid_struct[1].KD := 0.0;
	as_MStruct.pid_struct[1].DB := 0.5;
	
	//'Контур ограничения давления газа на выходе нагнетателя (ограничение)
	as_MStruct.pid_struct[2].loop_type := 1;
	as_MStruct.pid_struct[2].loop_num := 2;
	as_MStruct.pid_struct[2].loop_enable := true;
//	as_MStruct.pid_struct[2].loop_valid := on_2; 
	as_MStruct.pid_struct[2].auto_man := true;
	as_MStruct.pid_struct[2].loop_direct := false;
	as_MStruct.pid_struct[2].KP := 2.0;
	as_MStruct.pid_struct[2].KI := 0.5;
	as_MStruct.pid_struct[2].KD := 0.0;
	as_MStruct.pid_struct[2].DB := 0.01;
	
	//'Контур ограничения степени сжатия нагнетателя (ограничение)
	as_MStruct.pid_struct[3].loop_type := 1;
	as_MStruct.pid_struct[3].loop_num := 3;
	as_MStruct.pid_struct[3].loop_enable := true;
//	as_MStruct.pid_struct[3].loop_valid := on_3; 
	as_MStruct.pid_struct[3].auto_man := true;
	as_MStruct.pid_struct[3].loop_direct := false;
	as_MStruct.pid_struct[3].KP := 2.0;
	as_MStruct.pid_struct[3].KI := 0.5;
	as_MStruct.pid_struct[3].KD := 0.0;
	as_MStruct.pid_struct[3].DB := 0.05;
	
	as_MStruct.main_loop := 1;
	as_MStruct.auto_man := true;
	as_MStruct.N_loops := 3;

	CONST_T := -0.3;  //                                     	
	
	AS36_str.SP_Pout := 8.0;	//inv		
	AS36_str.SP_PoutPin := 2.0; //inv
	AS36_str.SP_manual_rate := 1.0; //inv
	AS36_str.SP_S := 5.0;//inv
	
	
end_if;



as_MStruct.pid_struct[1].loop_valid := True; //on_1; АМС
as_MStruct.pid_struct[2].loop_valid := on_2;
as_MStruct.pid_struct[3].loop_valid := on_3;

AS36_str.SP_Pout := AS36_str_in.SP_Pout;   // Добавлено АМС
AS36_str.SP_PoutPin := AS36_str_in.SP_PoutPin;      // Добавлено АМС
AS36_str.SP_S := AS36_str_in.SP_S;      // Добавлено АМС


/////	ПРИВЯЗКИ РЕГУЛЯТОРА

// для каждого агрегата привязываем:

//gpa[1].S := // запас по помпажу
//gpa[1].run := //	агрегат в магистрали

//gpa[2].S := // запас по помпажу
//gpa[2].run := //	агрегат в магистрали

//  -----//----

// сюда привязываем давление на выходе цеха
//shop.Eout := KC_to_SAR.evPg_out_KC;
// сюда привязваем степень сжатия через цех
//shop.EoutEin := 


//сюда привязываем команду "Разгрузка 36 крана"
//AS36_str.BTN_Unload := 
// сюда привязываем команду "Загрузка 36 крана"
//AS36_str.BTN_Load := 
// сюда привязываем обобщенный сигнал аварий и предупреждений по которому Кран 36 должен открываться
//AS36_str.Discr_PS := 
// cюда привязываем время последнего цикла приложения, в секундах
TSCAN := 0.1;

// отсюда забираем задание на 36 Кран
//  := AS36_str.AS_CV_out









as_MStruct.pid_struct[1].act_SP := AS36_str.SP_S;
as_MStruct.pid_struct[1].PV := AS36_str.Shop_YR3;
as_MStruct.pid_struct[1].delt_t := TSCAN;

as_MStruct.pid_struct[2].act_SP := AS36_str.SP_Pout;
as_MStruct.pid_struct[2].PV := shop.Eout;
as_MStruct.pid_struct[2].delt_t := TSCAN;

as_MStruct.pid_struct[3].act_SP := AS36_str.SP_PoutPin;
as_MStruct.pid_struct[3].PV := shop.EoutEin;// + 1.0;
as_MStruct.pid_struct[3].delt_t := TSCAN;

if loop_selected <> as_MStruct.loop_selected then PD_prev := as_MStruct.PplusD_selected; end_if;

d_pd := as_MStruct.PplusD_selected - PD_prev;

if as_MStruct.dI_selected < CONST_T *TSCAN then as_MStruct.dI_selected := CONST_T*TSCAN; end_if;
if d_pd +  as_MStruct.dI_selected < CONST_T*TSCAN then  
	d_pd := CONST_T*TSCAN - as_MStruct.dI_selected; 
end_if;

PD_prev := PD_prev + d_pd;

as_MStruct.CV := as_MStruct.CV + d_pd + as_MStruct.dI_selected;

if as_MStruct.CV < as_MStruct.low_clamp then as_MStruct.CV := as_MStruct.low_clamp; end_if;
if as_MStruct.CV > 100.0 then as_MStruct.CV := 100.0; end_if;


TEST.var_2 := d_pd;//TEST
TEST.var_3 := as_MStruct.low_clamp;//TEST

loop_selected := as_MStruct.loop_selected;
//CONST_T := -0.5;
]]></ST>
        </FunctionBlock>
        <FunctionBlock UUID="99210B724B0EF3BE91BD8B8D7747356C" Name="ramp_1">
            <Variables>
                <Variable UUID="AACDC3C64A478E14C8B5BBB34A316760" Name="enable1" Type="BOOL" TypeUUID="EC797BDD4541F500AD80A78F1F991834" Usage="input" />
                <Variable UUID="3AC40E3B44BDEBEDAFC502A1F33D91F8" Name="ramp_rate" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="inout" />
                <Variable UUID="14DBA6B74A9A6E356B95FAA4EAAF41F7" Name="y_target" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="inout" />
                <Variable UUID="E9C9FB5540879451911F38B859AA83B3" Name="y_current" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="inout" />
                <Variable UUID="47D106094AD59E7E19C08D9B86F1D31B" Name="ramp" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="output" />
                <Variable UUID="AD8E2A764A870B6A9C3C47BF5DC3DE79" Name="dd" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="internal" />
                <Variable UUID="BD551FF148FBAA0420F3119E40A629F9" Name="dy" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="internal" />
                <Variable UUID="AEBE332B42F064BDDD0D2F9DFC678BE4" Name="dd_1" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="internal" />
                <Variable UUID="D087801B4FCD68415D9799BB105DF264" Name="ramp_rate_1" Type="REAL" TypeUUID="42E054C8453789BBDD3594B53BDC7DE5" Usage="internal" />
            </Variables>
            <ST><![CDATA[IF enable1 THEN

 IF (ramp_rate = 0.0) THEN
                      ramp := y_target;
                      RETURN;
 END_IF; 

      dd := y_target - y_current ;
      ramp_rate_1 := ABS(ramp_rate);
      dy := ramp_rate_1 * TSCAN ;       

      dd_1:= ABS(dd);
      
      IF  dd_1 <= dy THEN
         ramp := y_target ;
         RETURN; 
      END_IF;   
        
  (*--------------------------------------------------------*)  
      IF dd > 0.0 THEN  ramp :=  y_current + dy ;
                  ELSE  ramp :=  y_current - dy ;
      END_IF ;          
    
 ELSE      
         ramp := y_current ;
 END_IF; 
]]></ST>
        </FunctionBlock>
    </FBLibrary>
</Program>
