/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FrameCreate;

import Tools.FileManager;
import Tools.LoggerFile;
import Tools.LoggerInterface;
import globalData.globVar;
import static globalData.globVar.*;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author nazarov
 */
public class LogerViewerFrame extends javax.swing.JFrame {
    private final LoggerInterface loggerFile = new LoggerFile();
    /**
     * Creates new form LogerViewerFrame
     */
    public LogerViewerFrame() {
        initComponents();
        openLogFile();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Просмотр логов");

        jTextPane1.setBackground(new java.awt.Color(51, 51, 51));
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 975, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );

        jButton1.setText("очистить лог-файл");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // кнопка удаления и создания лога
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nameF = globVar.logFile;
        File logF = new File(nameF);
        if (logF.exists()) {
            logF.delete();
        } 
        loggerFile.writeLog("Лог был очищен");
        openLogFile();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogerViewerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogerViewerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogerViewerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogerViewerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogerViewerFrame().setVisible(true);
            }
        });
    }

    // фукция открытия и разкрашивания текста
    private void openLogFile() {         
        InputStreamReader inputsream = null;
        try {
            jTextPane1.setText("");  //

            // Цвет фона окнас логами(в графике менять надо так как конструктор)
            jTextPane1.setContentType("text/html"); // or any other styled content type

            jTextPane1.setForeground(Color.white); // Works as expected
            //jTextPane1.setBackground(Color.red); // Obsolete, no affect

            // Define a default background color attribute
            Color backgroundColor = Color.BLACK;
            SimpleAttributeSet background = new SimpleAttributeSet();
            StyleConstants.setBackground(background, backgroundColor);
            jTextPane1.getStyledDocument().setParagraphAttributes(0,
                    jTextPane1.getDocument().getLength(), background, false);

            // And remove default (white) margin
            jTextPane1.setBorder(BorderFactory.createEmptyBorder());

            // Alternative: Leave a 2px border but draw it in the same color
            jTextPane1.setBorder(BorderFactory.createLineBorder(backgroundColor, 2));

            StyledDocument doc = jTextPane1.getStyledDocument();

            for (String strLog : loggerFile.readLog()) { // это просто понять что там выходит
                String[] podstroki = strLog.split(" "); // Создаем подстроки уже табом.
                for (String n : podstroki) {
                    //тут пробуем добавлять текст цветом
                    SimpleAttributeSet randomColor = new SimpleAttributeSet();
                    StyleConstants.setForeground(randomColor, new Color(rnd(255), rnd(255), rnd(255)));
                    SimpleAttributeSet defaultColor = new SimpleAttributeSet();
                    StyleConstants.setForeground(defaultColor, Color.LIGHT_GRAY);

                    StyleConstants.setBold(randomColor, true);
                    StyleConstants.setBold(defaultColor, true);

                    // тут нужно сделать отдельную функцию для переборазначений и цветов под них пока так
                    if (check(n)) { // передам в функцию для проверки пока одного значения
                        doc.insertString(doc.getLength(), n + " ", randomColor);
                    } else {
                        doc.insertString(doc.getLength(), n + " ", defaultColor); // так вносим с определенным стилем
                    }
                    // doc.insertString(doc.getLength(), "\n ", null); // так просто новая строка
                }
                doc.insertString(doc.getLength(), "\n ", null); // так просто новая строка
            }
            jTextPane1.setStyledDocument(doc);  // тут мы апрсто засовываем сформированный документ
            } catch (BadLocationException ex) {
            Logger.getLogger(LogerViewerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Функция рандома для тестов
    public static int rnd(final int max) {
        return (int) (Math.random() * max);
    }

    //  проверка патернов для раскраски
    public static boolean check(final String checS) {
        Pattern pattern1 = Pattern.compile("^.*Failed.*$");
        Matcher matcher1 = pattern1.matcher(checS);
        if (matcher1.matches()) {
            return true;
        }
        return false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
