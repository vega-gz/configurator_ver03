/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package basepostgresluaxls;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactoryConfigurationError;
import javax.xml.xpath.XPathExpressionException;
import javax.xml.xpath.XPathFactoryConfigurationException;
import org.w3c.dom.DOMException;
import org.xml.sax.SAXException;

/**
 *
 * @author admin
 */
public class Main_JPanel extends javax.swing.JPanel {

    BasePostgresLuaXLS workbase = new BasePostgresLuaXLS(); // подключаем нашу базу
    CreateFileIO_AILUA createF = new CreateFileIO_AILUA();
    LuaRun startScript = new LuaRun(); // Тут Луа 
    CreateTGPAAI gpaai = new CreateTGPAAI(); // создание файла и тут есть переменные с UUID
    ArrayList<String> listDropT = new ArrayList();
    XMLSAX createXMLSax = new XMLSAX(); // Класс созданния Базовых объектов



    /**
     * Creates new form Main_JPanel
     */
    public Main_JPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();

        setAutoscrolls(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setText("out_dataDB_to_Lua");
        jButton1.setToolTipText("Выгрузка данных из базы для файла LUA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("run_lua");
        jButton2.setToolTipText("Запустить скрипт");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Download XLS in DB");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Create_type_AI_without_xml");
        jButton4.setToolTipText(" create file Type_GPA_AI_from_java  Type_List_GPA_AI_from_java");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("ListTableDB");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("DropTable");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Global_Var_in XML_file");
        jButton7.setToolTipText("(не реализованно)вносим данные в Algorithm файла ControlProgram.int и ControlProgram.iec_st \\n доступоно после создание кнопки Create_type_AI");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(getComboBoxModel());
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton8.setText("create AI_, AI_HMI, AI_PLC");
        jButton8.setToolTipText("Создает базовый класс AI_");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(188, 188, 188)
                                .addComponent(jButton5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6))
                            .addComponent(jButton3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton8)
                                .addGap(201, 201, 201)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //jButton1.setToolTipText(" данные из Базы"); // не работает тут, нужно через Свойства
        JFileChooser fileopen = new JFileChooser("C:\\Users\\Nazarov\\Desktop\\Info_script_file_work\\_actual_config\\Config\\Design\\IO_XLS\\GPA");
        int ret = fileopen.showDialog(null, "Открыть файл");                
        if (ret == JFileChooser.APPROVE_OPTION) {
        File file = fileopen.getSelectedFile();
        //System.out.print(file.getPath());
        jTextArea1.setText(file.getPath()); //вносим данные в поле путь до файла
        // select Database test and write to file from Lua
        
        ArrayList<String[]> dataFromDb = new ArrayList<>();
        workbase.connectionToBase();
        dataFromDb = workbase.selectData("ai1");
            try {
                createF.writeData(dataFromDb, file.getPath()); // write file
            } catch (IOException ex) {
                Logger.getLogger(Main_JPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        javax.swing.JOptionPane.showMessageDialog(null,"Данные из базы в файл " + file.getPath() + " загружены"); //диалоговое окно


          
   
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileopen = new JFileChooser("C:\\Users\\Nazarov\\Desktop\\Info_script_file_work\\_actual_config\\Config\\Design\\LUA_FILE\\Template\\AI");
        int ret = fileopen.showDialog(null, "Запустить Lua файл");                
        if (ret == JFileChooser.APPROVE_OPTION) {
        File file = fileopen.getSelectedFile();
        //System.out.print(file.getPath());
        jTextArea1.setText(file.getPath()); //вносим данные в поле путь до файла
        // select Database test and write to file from Lua
        
        startScript.runLua(file.getPath());
    }//GEN-LAST:event_jButton2ActionPerformed
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JFileChooser fileopen = new JFileChooser("C:\\Users\\Nazarov\\"
              + "Desktop\\Info_script_file_work\\_actual_config\\Config\\Design\\IO_XLS\\GPA");
        int ret = fileopen.showDialog(null, "Загрузка Exel в базу");                
        if (ret == JFileChooser.APPROVE_OPTION) {
        File file = fileopen.getSelectedFile();
        
        try {
            // TODO add your handling code here:
            //загрузка в базу изх файла
            Main.fillDB(file.getPath());
        }
       catch(IOException e){
            System.out.println(e);
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        workbase.connectionToBase();
        ArrayList<String[]> dataFromDbGPAI = new ArrayList<>();
        dataFromDbGPAI = workbase.selectDataGPAAI("ai1");
        try {
            gpaai.writeAI_();
            //gpaai.writeListData(15); // write file 
            gpaai.writeAI_PLC();
            gpaai.writeAI_HMI();
            gpaai.T_GPA_AI_PLC(dataFromDbGPAI, "T_GPA_AI_PLC"); // должны быть после создания выше
            try { // Так все из за XML (Запись в файл)
                gpaai.T_GPA_AI_HMI(dataFromDbGPAI, "T_GPA_AI_HMI");
            } catch (ParserConfigurationException | SAXException | DOMException | XPathExpressionException | TransformerFactoryConfigurationError | TransformerException | XPathFactoryConfigurationException | InterruptedException ex) {
                Logger.getLogger(Main_JPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            gpaai.T_GPA_AI_DRV(dataFromDbGPAI, "T_GPA_AI_DRV");
            
        }
        catch(IOException e){
            System.out.println(e);
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        // выводим список таблиц из базы test08_DB
        String db = "test08_DB";
        workbase.connectionToBase();
        listDropT = workbase.getviewTable(db);
        Iterator<String> iter_list_table = listDropT.iterator();
        String listTable = "";
       
        while (iter_list_table.hasNext()) {
         
         listTable += iter_list_table.next() + " \n";
        }
         
         
               
        jTextArea1.setText( listTable);
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        workbase.connectionToBase();
        if (!listDropT.isEmpty()){  // если есть что удалять передаем лист в обработчик баз
        workbase.dropTable(listDropT);
        }
        else ;
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // А это не хера не делает, в кнопке выше уже присутствует добавление в глобальные
        workbase.connectionToBase();
        ArrayList<String[]> dataFromDbGPAI = new ArrayList<>();
        dataFromDbGPAI = workbase.selectDataGPAAI("ai1");
        //тут надо реализовать работу XMLDomRW
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText((String)jComboBox1.getSelectedItem());// выводим что выбрали
        ArrayList<String[]> dataFromDb = new ArrayList<>();
        String[] columns = {"uuid_plc","colum_18","Наименование сигнала"}; // тут у нас что отоброжать 
        String selectElem = (String)jComboBox1.getSelectedItem();
        workbase.connectionToBase();
        workbase.selectData(selectElem, columns); //внесли данные в сущность 
        StructSelectData.setnTable(selectElem); // вносим в структуру название таблицы для печати того же файла Максима  LUA
        dataFromDb = workbase.getcurrentSelectTable();
        workbase.getColumns();
        //javax.swing.JOptionPane.showMessageDialog(null,"Выборка по базе " + columns + " загружены"); //диалоговое окно
        
        // тут при выборе открываем новое Диалоговое окно с таблицой выборки
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();  //размеры экрана
        int sizeWidth = 800;
        int sizeHeight = 600;
        int locationX = (screenSize.width - sizeWidth) / 2;
        int locationY = (screenSize.height - sizeHeight) / 2;
        FrameTable frameTable = new FrameTable();
        JFrame frame = new JFrame();
        frame.setBounds(locationX, locationY, sizeWidth, sizeHeight); // Размеры и позиция
        frame.setContentPane(frameTable); // Передаем нашу форму
        frame.setVisible(true);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       // Кнопка создания файла TypeAI_.type
         try {
             try {
                 createXMLSax.createTypeAI_();
                 createXMLSax.createTypeAI_HMI();
                 createXMLSax.createTypeAI_PLC();
                 createXMLSax.runBaseRuncreateTypeT();
             } catch (ParserConfigurationException ex) {
                 Logger.getLogger(Main_JPanel.class.getName()).log(Level.SEVERE, null, ex);
             }
         } catch (TransformerFactoryConfigurationError ex) {
        Logger.getLogger(XMLDomRW.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(null, "Файл не создан!"); 
         }
        JOptionPane.showMessageDialog(null, "Файл "
                + "записан в "); // Это сообщение
    }//GEN-LAST:event_jButton8ActionPerformed
    

private ComboBoxModel getComboBoxModel()  // функция для создания списка из таблиц базы
{ 
        String db = "test08_DB";
        workbase.connectionToBase();
        listDropT = workbase.getviewTable(db);
        Iterator<String> iter_list_table = listDropT.iterator();
        
         String listTable = "";
       int l =0;
        while (iter_list_table.hasNext()) {
         iter_list_table.next();
         //System.out.print(l);
         ++l;
        }
        String[] listarrayTable = new String[l];
        l=0;
        
        iter_list_table = listDropT.iterator();
        while (iter_list_table.hasNext()) {
         String res =iter_list_table.next();
         listarrayTable[l] = res;
         ++l;
        }
        return new DefaultComboBoxModel(listarrayTable); 
} 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
